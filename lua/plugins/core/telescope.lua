return {
	"nvim-telescope/telescope.nvim",
	cmd = "Telescope",
	dependencies = {
		{ "nvim-lua/plenary.nvim" },
	},
	keys = {
		{ "<leader>ff", "<cmd>Telescope find_files<CR>", desc = "Find files" },
		{ "<leader>fw", "<cmd>Telescope live_grep<CR>", desc = "Find a string" },
		{ "<leader>fb", "<cmd>Telescope buffers<CR>", desc = "Find buffers" },
		{ "<leader>fr", "<cmd>Telescope oldfiles<CR>", desc = "Find recent file" },
		{ "<leader>fk", "<cmd>Telescope keymaps<CR>", desc = "Find keymaps" },
		{ "<leader>fc", "<cmd>Telescope find_files cwd=$HOME/.config/nvim/<CR>", desc = "Open config" },
		{ "<leader>fh", "<cmd>Telescope help_tags<CR>", desc = "Open help" },
	},
	config = function()
		require("telescope").setup({
			defaults = {
				vimgrep_arguments = {
					"rg",
					"-L",
					"--color=never",
					"--no-heading",
					"--with-filename",
					"--line-number",
					"--column",
					"--smart-case",
				},
				prompt_prefix = "   ",
				entry_prefix = "   ",
				initial_mode = "insert",
				selection_caret = "  ",
				path_display = { "truncate" },
				selection_strategy = "reset",
				sorting_strategy = "descending",
				layout_strategy = "horizontal",
				winblend = 0,
				layout_config = {
					horizontal = {
						prompt_position = "bottom",
						preview_width = 0.60,
						results_width = 0.8,
					},
					vertical = {
						mirror = true,
					},
					width = 0.70,
					height = 0.80,
					-- preview_cutoff = 120,
				},
				border = {},
				borderchars = { "─", "│", "─", "│", "┌", "┐", "┘", "└" },
				color_devicons = true,
				use_less = true,
				set_env = { ["COLORTERM"] = "truecolor" },

				file_ignore_patterns = {
					"phaser.min.js",
					"phaser.d.ts",
					"target/",
					"docs/",
					"vendor/*",
					"%.lock",
					"__pycache__/*",
					"%.sqlite3",
					"%.ipynb",
					"node_modules/*",
					"%.mp3",
					"%.ogg",
					"%.avi",
					"%.jpg",
					"%.so",
					"%.jpeg",
					"%.png",
					"%.svg",
					"%.otf",
					"%.ttf",
					"%.webp",
					".dart_tool/",
					".github/",
					".gradle/",
					".idea/",
					".settings/",
					".vscode/",
					"__pycache__/",
					"build/",
					"gradle/",
					"node_modules/",
					"%.pdb",
					"%.dll",
					"%.class",
					"%.exe",
					"%.cache",
					"%.ico",
					"%.pdf",
					"%.dylib",
					"%.jar",
					"%.docx",
					"%.met",
					"smalljre_*/*",
					".vale/",
					"%.burp",
					"%.mp4",
					"%.mkv",
					"%.rar",
					"%.zip",
					"%.7z",
					"%.tar",
					"%.bz2",
					"%.epub",
					"%.flac",
					"%.tar.gz",
					"%.prefab",
					"%.shader",
					"%.meta",
					"%.asset",
					"%.blob",
					"%.mat",
					"%.fbx",
					"%.psd",
					"%.unity",
					"%.cginc",
				},
				mappings = {
					i = {
						["<C-j>"] = require("telescope.actions").move_selection_next,
						["<C-k>"] = require("telescope.actions").move_selection_previous,
						["<esc>"] = require("telescope.actions").close,
						["<C-o>"] = function(p_bufnr) require("telescope.actions").send_selected_to_qflist(p_bufnr) vim.cmd.cfdo("edit") end,
					},

					n = {
						["<C-j>"] = require("telescope.actions").move_selection_next,
						["<C-k>"] = require("telescope.actions").move_selection_previous,
						["<C-o>"] = function(p_bufnr) require("telescope.actions").send_selected_to_qflist(p_bufnr) vim.cmd.cfdo("edit") end,
					},
				},
			},
			pickers = {
				colorscheme = {
					enable_preview = true,
				},
			},
			extensions = {
				persisted = {
					layout_config = { width = 0.55, height = 0.55 },
				},
			},
		})

		require("telescope").load_extension("persisted")
	end,
}
